"use strict";export const validate = validate10;export default validate10;var schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/CharacterCardV1","definitions":{"CharacterCardV1":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"personality":{"type":"string"},"scenario":{"type":"string"},"first_mes":{"type":"string"},"mes_example":{"type":"string"}},"required":["name","description","personality","scenario","first_mes","mes_example"],"additionalProperties":false}}};var schema12 = {"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"personality":{"type":"string"},"scenario":{"type":"string"},"first_mes":{"type":"string"},"mes_example":{"type":"string"}},"required":["name","description","personality","scenario","first_mes","mes_example"],"additionalProperties":false};function validate10(data, valCxt){"use strict"; ;if(valCxt){var instancePath = valCxt.instancePath;var parentData = valCxt.parentData;var parentDataProperty = valCxt.parentDataProperty;var rootData = valCxt.rootData;}else {var instancePath = "";var parentData = undefined;var parentDataProperty = undefined;var rootData = data;}var vErrors = null;var errors = 0;var _errs0 = errors;if(errors === _errs0){if(data && typeof data == "object" && !Array.isArray(data)){var missing0;if(((((((data.name === undefined) && (missing0 = "name")) || ((data.description === undefined) && (missing0 = "description"))) || ((data.personality === undefined) && (missing0 = "personality"))) || ((data.scenario === undefined) && (missing0 = "scenario"))) || ((data.first_mes === undefined) && (missing0 = "first_mes"))) || ((data.mes_example === undefined) && (missing0 = "mes_example"))){validate10.errors = [{instancePath:instancePath,schemaPath:"#/definitions/CharacterCardV1/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {var _errs2 = errors;for(var key0 in data){if(!((((((key0 === "name") || (key0 === "description")) || (key0 === "personality")) || (key0 === "scenario")) || (key0 === "first_mes")) || (key0 === "mes_example"))){validate10.errors = [{instancePath:instancePath,schemaPath:"#/definitions/CharacterCardV1/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs2 === errors){if(data.name !== undefined){var _errs3 = errors;if(typeof data.name !== "string"){validate10.errors = [{instancePath:instancePath+"/name",schemaPath:"#/definitions/CharacterCardV1/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs3 === errors;}else {var valid1 = true;}if(valid1){if(data.description !== undefined){var _errs5 = errors;if(typeof data.description !== "string"){validate10.errors = [{instancePath:instancePath+"/description",schemaPath:"#/definitions/CharacterCardV1/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data.personality !== undefined){var _errs7 = errors;if(typeof data.personality !== "string"){validate10.errors = [{instancePath:instancePath+"/personality",schemaPath:"#/definitions/CharacterCardV1/properties/personality/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs7 === errors;}else {var valid1 = true;}if(valid1){if(data.scenario !== undefined){var _errs9 = errors;if(typeof data.scenario !== "string"){validate10.errors = [{instancePath:instancePath+"/scenario",schemaPath:"#/definitions/CharacterCardV1/properties/scenario/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs9 === errors;}else {var valid1 = true;}if(valid1){if(data.first_mes !== undefined){var _errs11 = errors;if(typeof data.first_mes !== "string"){validate10.errors = [{instancePath:instancePath+"/first_mes",schemaPath:"#/definitions/CharacterCardV1/properties/first_mes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs11 === errors;}else {var valid1 = true;}if(valid1){if(data.mes_example !== undefined){var _errs13 = errors;if(typeof data.mes_example !== "string"){validate10.errors = [{instancePath:instancePath+"/mes_example",schemaPath:"#/definitions/CharacterCardV1/properties/mes_example/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs13 === errors;}else {var valid1 = true;}}}}}}}}}else {validate10.errors = [{instancePath:instancePath,schemaPath:"#/definitions/CharacterCardV1/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;}